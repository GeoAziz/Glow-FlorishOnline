rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isRole(role) {
      let userDocPath = /databases/$(database)/documents/users/$(request.auth.uid);
      return isSignedIn() && exists(userDocPath) && get(userDocPath).data.role == role;
    }
    
    function isAdmin() {
      return isRole('admin');
    }

    // --- Public Collections (Read-Only for Public) ---
    match /products/{productId} {
      allow read: if true;
      // All modifications (create, update, delete) must be done by an admin.
      // User-submitted reviews are handled via secure server actions.
      allow write: if isAdmin();
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /blog_posts/{slug} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // --- User-Specific Collections (Owner-Only Access) ---
    match /carts/{userId} {
      allow read, write: if isOwner(userId);
    }

    match /wishlists/{userId} {
      allow read, write: if isOwner(userId);
    }

    match /orders/{orderId} {
      // Any signed-in user can create an order.
      allow create: if isSignedIn();
      // Only the owner or an admin can read an order.
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // Only an admin can update an order (e.g., change status).
      allow update: if isAdmin();
    }
    
    // --- User Management ---
    match /users/{userId} {
      // A user can create their own profile document.
      allow create: if isOwner(userId);
      // A user can read their own profile; an admin can read any profile.
      allow read: if isOwner(userId) || isAdmin();
      // An admin can update anything. A user can only update their own displayName.
      allow update: if isAdmin() || (isOwner(userId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName']));
      // Only admins can delete user profiles.
      allow delete: if isAdmin();
    }
    
    // --- Miscellaneous Collections ---
    match /contact_messages/{messageId} {
      allow create: if true; // Anyone can send a message.
      allow read, write: if isAdmin();
    }

    match /newsletter_subscriptions/{email} {
      allow create: if true; // Anyone can subscribe.
      allow read: if isAdmin();
    }
  }
}
