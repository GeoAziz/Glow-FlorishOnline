
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users can read their own document
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated(); // Allow user creation on signup
    }

    // Products and Categories are public
    match /products/{productId} {
      allow read: if true;
    }
    match /categories/{categoryId} {
      allow read: if true;
    }
    
    // Blog posts are public
    match /blog_posts/{postId} {
        allow read: if true;
    }

    // Wishlists: Users can read and write to their own wishlist
    match /wishlists/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // Orders: Users can create orders and read their own orders
    match /orders/{orderId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Contact Messages: Anyone can create
    match /contact_messages/{messageId} {
        allow create: if true;
        // Restrict read/write to admins/moderators in a real app
    }
    
    // Newsletter Subscriptions: Anyone can create
    match /newsletter_subscriptions/{email} {
        allow create: if true;
        // Restrict read/write to admins/moderators in a real app
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
